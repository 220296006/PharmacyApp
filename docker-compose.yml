version: '3.8'

# Define services
services:
  mysql:
    container_name: mysql-pharmacyapp
    image: mysql:8.1
    command: --lower_case_table_names=1 
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: pharmacyapp
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"]
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    container_name: pharmacyapp-elasticsearch
    image: elasticsearch:7.17.7
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    container_name: pharmacyapp-backend
    image: pharmacyapp/pharmacyapp:1.0.2
    depends_on:
      mysql:
        condition: service_healthy
      elasticsearch:
        condition: service_started  
    ports:
      - "8080:8080"
    environment:
      DB_URL: ${DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_ID: ${EMAIL_ID}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      VERIFY_EMAIL_HOST: ${VERIFY_EMAIL_HOST}
      JWT_SECRET: ${JWT_SECRET}
      SERVER_PORT: ${SERVER_PORT}
      ELASTICSEARCH_HOST: pharmacyapp-elasticsearch-1  # Corrected service name here
      ELASTICSEARCH_PORT: 9200
      ELASTICSEARCH_USERNAME: ${ELASTICSEARCH_USERNAME}
      ELASTICSEARCH_PASSWORD: ${ELASTICSEARCH_PASSWORD}
    restart: unless-stopped

  angular-client:
    build:
      context: ./front-end
    ports:
      - "4200:80"

# Define volumes
volumes:
  mysql_data:
  es_data:
