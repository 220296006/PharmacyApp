# Database Configuration
spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  # CORS Configuration
  servlet:
    filter:
      cors:
        allowed-origins: http://localhost:4200,http://localhost:8080 # Allowed CORS origins

  # Spring JDBC Session
  session:
    jdbc:
      schema: classpath:org/springframework/session/jdbc/schema-@@platform@@.sql
      table-name: SPRING_SESSION
      initialize-schema: always
      store-type: jdbc

  # SQL Initialization Configuration
  sql:
    init:
      mode: always # Initialize SQL on startup
      continue-on-error: true # Continue initialization on error

# Logging Configuration
logging:
  level:
    org.springframework.mail: DEBUG
    jakarta.mail: DEBUG

#    org:
#      springframework:
#        security: TRACE
#        session: DEBUG
#        com.pharmacyapp: DEBUG

# Thymeleaf Configuration
thymeleaf:
  enabled: true # Enable Thymeleaf template engine
  prefix: classpath:/templates/ # Template prefix
  suffix: .html # Template suffix
  cache: false # Disable template caching

# JPA/Hibernate Configuration
  jpa:
    show-sql: true # Show SQL queries in logs
    database-platform: org.hibernate.dialect.MySQL8Dialect # Database dialect
    hibernate:
      ddl-auto: update # Disable automatic schema creation
    enable-default-schema: true # Enable default schema
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        globally_quoted_identifiers: true
      format-sql: true
      open-in-view: false

# Email Configuration
  mail:
    host: ${EMAIL_HOST} # SMTP host for sending emails
    port: ${EMAIL_PORT} # SMTP port
    username: ${EMAIL_ID}$ # Email account username
    password: ${EMAIL_PASSWORD}$   # Email account password
    default-encoding: UTF-8 # Default email encoding
    properties:
      mail:
        mime:
          charset: UTF-8 # MIME charset
        smtp:
          writetimeout: 10000 # Write timeout for SMTP connection
          connectiontimeout: 10000 # Connection timeout for SMTP connection
          timeout: 10000 # Timeout for SMTP connection
          auth: true # Enable authentication
          starttls:
            enable: true # Enable STARTTLS
            required: true # Require STARTTLS
    from: ${EMAIL_ID} # Email account username

# JWT Configuration
jwt:
  secret: ${JWT_SECRET}

# Server Configuration
server:
  port: ${SERVER_PORT} # Server port
  servlet:
    session:
      timeout: 1800 # Session timeout. If a duration suffix is not specified, seconds are used.

 # Elasticsearch Configuration
  elasticsearch:
    username: ${ELASTICSEARCH_USERNAME}
    password: ${ELASTICSEARCH_PASSWORD}
    rest:
      base-uris: http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}